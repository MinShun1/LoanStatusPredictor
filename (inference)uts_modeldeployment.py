# -*- coding: utf-8 -*-
"""(Inference)UTS_ModelDeployment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1h0GF8fanCSqKZjjKVwK-HI7-EKMixDOI
"""

import streamlit as st
import numpy as np
import pickle
import gzip
import os

if os.path.exists("model.pkl.gz"):
    with gzip.open("model.pkl.gz", "rb") as f:
        model = pickle.load(f)
else:
    st.error("File model 'LoanPredictor.pkl.gz' tidak ditemukan.")

if os.path.exists("LoanScaler.pkl"):
    scaler = pickle.load(open("LoanScaler.pkl", "rb"))
else:
    st.error("File scaler 'LoanScaler.pkl' tidak ditemukan.")

st.set_page_config(page_title="Loan Status Prediction", layout="centered")
st.title("üí∏ Loan Status Predictor")
st.markdown("Masukkan informasi peminjam di bawah untuk memprediksi apakah pinjaman akan disetujui.")

with st.form("loan_form"):
    person_age = st.slider("Usia", 18, 80, 30)
    person_gender = st.selectbox("Jenis Kelamin", options=["Laki-laki", "Perempuan"])
    person_education = st.selectbox("Tingkat Pendidikan", options=["Tidak diketahui", "SMA", "Sarjana", "Pascasarjana"])
    person_income = st.number_input("Pendapatan Bulanan", min_value=0, value=3000)
    person_emp_exp = st.slider("Lama Bekerja (tahun)", 0, 40, 5)
    loan_amnt = st.number_input("Jumlah Pinjaman", min_value=100, value=10000)
    loan_int_rate = st.slider("Bunga Pinjaman (%)", 0.0, 40.0, 10.0)
    loan_percent_income = st.slider("Persentase Pendapatan untuk Pinjaman (%)", 0.0, 100.0, 30.0)
    cb_person_cred_hist_length = st.slider("Lama Riwayat Kredit (tahun)", 0, 30, 5)
    credit_score = st.slider("Skor Kredit", 300, 850, 650)
    previous_loan_defaults_on_file = st.selectbox("Pernah Gagal Bayar Sebelumnya?", options=["Tidak", "Ya"])

    st.markdown("**Status Kepemilikan Rumah**")
    home_status = st.radio("", options=["MORTGAGE", "OTHER", "OWN", "RENT"])
    home_onehot = [1 if home_status == x else 0 for x in ["MORTGAGE", "OTHER", "OWN", "RENT"]]

    st.markdown("**Tujuan Pinjaman**")
    loan_purpose = st.radio("", options=["DEBTCONSOLIDATION", "EDUCATION", "HOMEIMPROVEMENT", "MEDICAL", "PERSONAL", "VENTURE"])
    purpose_onehot = [1 if loan_purpose == x else 0 for x in ["DEBTCONSOLIDATION", "EDUCATION", "HOMEIMPROVEMENT", "MEDICAL", "PERSONAL", "VENTURE"]]

    submitted = st.form_submit_button("üîç Prediksi")

if submitted:
    # Encoding data yang dimasukkan oleh pengguna
    gender_code = 1 if person_gender == "Laki-laki" else 0
    education_code = {"Tidak diketahui": 0, "SMA": 1, "Sarjana": 2, "Pascasarjana": 3}[person_education]
    default_flag = 1 if previous_loan_defaults_on_file == "Ya" else 0

    input_data = np.array([[
        person_age,
        gender_code,
        education_code,
        person_income,
        person_emp_exp,
        loan_amnt,
        loan_int_rate,
        loan_percent_income,
        cb_person_cred_hist_length,
        credit_score,
        default_flag,
        *home_onehot,
        *purpose_onehot
    ]])

    # Scaling data
    input_scaled = scaler.transform(input_data)

    # Prediksi dengan model
    prediction = model.predict(input_scaled)[0]
    probability = model.predict_proba(input_scaled)[0][1] 

    # Menampilkan hasil prediksi
    if prediction == 1:
        st.success(f"‚úÖ Pinjaman kemungkinan besar **disetujui** (Probabilitas: {probability:.2f})")
    else:
        st.error(f"‚ùå Pinjaman kemungkinan besar **tidak disetujui** (Probabilitas: {probability:.2f})")
